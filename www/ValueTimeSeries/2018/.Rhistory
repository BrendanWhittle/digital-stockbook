library(RODBC)
library(RColorBrewer)
setwd('y:\\StockBooks\\_StockBook2018\\Plots\\ValueTimeSeries')
pal <- brewer.pal(9, 'Blues')
Q <- "
select datepart(yy,a.DepartureDate) as Year
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end as species
,sum(a.EstKgWeightSUM) / 1000 as LiveWtTonnes
,sum(a.EstKgWeightSUM * b.PricePerKgLiveWt) /sum(a.EstKgWeightSUM) as MeanPricePerKgLiveWt
from declarations a
join stecf.FishPrice_Division b
on a.LogID = b.LogID
and a.LogDeclarationID = b.LogDeclarationID
and a.SpeciesID = b.SpeciesID
join SpeciesLookup c
on a.SpeciesID = c.SpeciesID
join vessels d
on a.VesselID = d.VesselID
where d.VesselProvenance = 'ireland'
and datepart(yy,departuredate) between 2008 and 2017
group by datepart(yy,a.DepartureDate)
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
order by datepart(yy,a.DepartureDate)
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
"
#Q <- "
#   select datepart(yy,a.DepartureDate) as Year
#      ,FSS_SpeciesName as species
#      ,sum(a.EstKgWeightSUM) / 1000 as LiveWtTonnes
#      ,sum(a.EstKgWeightSUM * b.PricePerKgLiveWt) /sum(a.EstKgWeightSUM) as MeanPricePerKgLiveWt
#   from declarations a
#      join stecf.FishPrice_Division b
#         on a.LogID = b.LogID
#         and a.LogDeclarationID = b.LogDeclarationID
#         and a.SpeciesID = b.SpeciesID
#      join SpeciesLookup c
#         on a.SpeciesID = c.SpeciesID
#      join vessels d
#         on a.VesselID = d.VesselID
#   where d.VesselProvenance = 'ireland'
#      and datepart(yy,departuredate) between 2007 and 2016
#   group by datepart(yy,a.DepartureDate)
#      ,FSS_SpeciesName
#   order by datepart(yy,a.DepartureDate)
#      ,FSS_SpeciesName
# "
channel <- odbcDriverConnect("Driver=SQL Server; Server=VMFSSDEV02; Database=Logbooks_20180305")
land <- sqlQuery(channel,Q)
close(channel)
table(land$species)
land$YearFact <- factor(land$Year)
land <- subset(land,species!="Mackerel Chub\r\n\t")
for(s in sort(unique(land$species))) {
t <- with(subset(land,species==s),tapply(LiveWtTonnes*MeanPricePerKgLiveWt/1000,list(YearFact),sum))
S <- ifelse(s=='Sole Black','Sole',s)
S <- ifelse(s=='Monkfish','Anglerfish',S)
png(paste0(sub('/','-',S),'.png'),3,2,'in',8,'white',600)
par(mar=c(3,4,2.5,0))
barplot(t,las=3,col=pal[7],ylab='Value (millions ???)',main=paste(S,'- value of Irish landings'))
dev.off()
cat(s,t['2017'],'\n')
}
library(RODBC)
library(RColorBrewer)
setwd('y:\\StockBooks\\_StockBook2018\\Plots\\ValueTimeSeries')
pal <- brewer.pal(9, 'Blues')
Q <- "
select datepart(yy,a.DepartureDate) as Year
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end as species
,sum(a.EstKgWeightSUM) / 1000 as LiveWtTonnes
,sum(a.EstKgWeightSUM * b.PricePerKgLiveWt) /sum(a.EstKgWeightSUM) as MeanPricePerKgLiveWt
from declarations a
join stecf.FishPrice_Division b
on a.LogID = b.LogID
and a.LogDeclarationID = b.LogDeclarationID
and a.SpeciesID = b.SpeciesID
join SpeciesLookup c
on a.SpeciesID = c.SpeciesID
join vessels d
on a.VesselID = d.VesselID
where d.VesselProvenance = 'ireland'
and datepart(yy,departuredate) between 2008 and 2017
group by datepart(yy,a.DepartureDate)
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
order by datepart(yy,a.DepartureDate)
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
"
#Q <- "
#   select datepart(yy,a.DepartureDate) as Year
#      ,FSS_SpeciesName as species
#      ,sum(a.EstKgWeightSUM) / 1000 as LiveWtTonnes
#      ,sum(a.EstKgWeightSUM * b.PricePerKgLiveWt) /sum(a.EstKgWeightSUM) as MeanPricePerKgLiveWt
#   from declarations a
#      join stecf.FishPrice_Division b
#         on a.LogID = b.LogID
#         and a.LogDeclarationID = b.LogDeclarationID
#         and a.SpeciesID = b.SpeciesID
#      join SpeciesLookup c
#         on a.SpeciesID = c.SpeciesID
#      join vessels d
#         on a.VesselID = d.VesselID
#   where d.VesselProvenance = 'ireland'
#      and datepart(yy,departuredate) between 2008 and 2017
#   group by datepart(yy,a.DepartureDate)
#      ,FSS_SpeciesName
#   order by datepart(yy,a.DepartureDate)
#      ,FSS_SpeciesName
# "
channel <- odbcDriverConnect("Driver=SQL Server; Server=VMFSSDEV02; Database=Logbooks_20180430")
land <- sqlQuery(channel,Q)
close(channel)
table(land$species)
land$YearFact <- factor(land$Year)
land <- subset(land,species!="Mackerel Chub\r\n\t")
for(s in sort(unique(land$species))) {
t <- with(subset(land,species==s),tapply(LiveWtTonnes*MeanPricePerKgLiveWt/1000,list(YearFact),sum))
S <- ifelse(s=='Sole Black','Sole',s)
S <- ifelse(s=='Monkfish','Anglerfish',S)
png(paste0(sub('/','-',S),'.png'),3,2,'in',8,'white',600)
par(mar=c(3,4,2.5,0))
barplot(t,las=3,col=pal[7],ylab='Value (millions ???)',main=paste(S,'- value of Irish landings'))
dev.off()
cat(s,t['2017'],'\n')
}
library(RODBC)
library(RColorBrewer)
setwd('y:\\StockBooks\\_StockBook2018\\Plots\\ValueTimeSeries')
pal <- brewer.pal(9, 'Blues')
Q <- "
select datepart(yy,a.DepartureDate) as Year
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end as species
,sum(a.EstKgWeightSUM) / 1000 as LiveWtTonnes
,sum(a.EstKgWeightSUM * b.PricePerKgLiveWt) /sum(a.EstKgWeightSUM) as MeanPricePerKgLiveWt
from declarations a
join stecf.FishPrice_Division b
on a.LogID = b.LogID
and a.LogDeclarationID = b.LogDeclarationID
and a.SpeciesID = b.SpeciesID
join SpeciesLookup c
on a.SpeciesID = c.SpeciesID
join vessels d
on a.VesselID = d.VesselID
where d.VesselProvenance = 'ireland'
and datepart(yy,departuredate) between 2008 and 2017
group by datepart(yy,a.DepartureDate)
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
order by datepart(yy,a.DepartureDate)
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
"
#Q <- "
#   select datepart(yy,a.DepartureDate) as Year
#      ,FSS_SpeciesName as species
#      ,sum(a.EstKgWeightSUM) / 1000 as LiveWtTonnes
#      ,sum(a.EstKgWeightSUM * b.PricePerKgLiveWt) /sum(a.EstKgWeightSUM) as MeanPricePerKgLiveWt
#   from declarations a
#      join stecf.FishPrice_Division b
#         on a.LogID = b.LogID
#         and a.LogDeclarationID = b.LogDeclarationID
#         and a.SpeciesID = b.SpeciesID
#      join SpeciesLookup c
#         on a.SpeciesID = c.SpeciesID
#      join vessels d
#         on a.VesselID = d.VesselID
#   where d.VesselProvenance = 'ireland'
#      and datepart(yy,departuredate) between 2008 and 2017
#   group by datepart(yy,a.DepartureDate)
#      ,FSS_SpeciesName
#   order by datepart(yy,a.DepartureDate)
#      ,FSS_SpeciesName
# "
channel <- odbcDriverConnect("Driver=SQL Server; Server=VMFSSDEV02; Database=Logbooks_20180430")
land <- sqlQuery(channel,Q)
close(channel)
table(land$species)
land$YearFact <- factor(land$Year)
land <- subset(land,species!="Mackerel Chub\r\n\t")
for(s in sort(unique(land$species))) {
t <- with(subset(land,species==s),tapply(LiveWtTonnes*MeanPricePerKgLiveWt/1000,list(YearFact),sum))
S <- ifelse(s=='Sole Black','Sole',s)
S <- ifelse(s=='Monkfish','Anglerfish',S)
png(paste0(sub('/','-',S),'.png'),3,2,'in',8,'white',600)
par(mar=c(3,4,2.5,0))
barplot(t,las=3,col=pal[7],ylab='Value (millions )',main=paste(S,'- value of Irish landings'))
dev.off()
cat(s,t['2017'],'\n')
}
library(RODBC)
library(RColorBrewer)
setwd('y:\\StockBooks\\_StockBook2018\\Plots\\ValueTimeSeries')
pal <- brewer.pal(9, 'Blues')
Q <- "
select datepart(yy,a.DepartureDate) as Year
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end as species
,sum(a.EstKgWeightSUM) / 1000 as LiveWtTonnes
,sum(a.EstKgWeightSUM * b.PricePerKgLiveWt) /sum(a.EstKgWeightSUM) as MeanPricePerKgLiveWt
from declarations a
join stecf.FishPrice_Division b
on a.LogID = b.LogID
and a.LogDeclarationID = b.LogDeclarationID
and a.SpeciesID = b.SpeciesID
join SpeciesLookup c
on a.SpeciesID = c.SpeciesID
join vessels d
on a.VesselID = d.VesselID
where d.VesselProvenance = 'ireland'
and datepart(yy,departuredate) between 2008 and 2017
group by datepart(yy,a.DepartureDate)
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
order by datepart(yy,a.DepartureDate)
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
"
#Q <- "
#   select datepart(yy,a.DepartureDate) as Year
#      ,FSS_SpeciesName as species
#      ,sum(a.EstKgWeightSUM) / 1000 as LiveWtTonnes
#      ,sum(a.EstKgWeightSUM * b.PricePerKgLiveWt) /sum(a.EstKgWeightSUM) as MeanPricePerKgLiveWt
#   from declarations a
#      join stecf.FishPrice_Division b
#         on a.LogID = b.LogID
#         and a.LogDeclarationID = b.LogDeclarationID
#         and a.SpeciesID = b.SpeciesID
#      join SpeciesLookup c
#         on a.SpeciesID = c.SpeciesID
#      join vessels d
#         on a.VesselID = d.VesselID
#   where d.VesselProvenance = 'ireland'
#      and datepart(yy,departuredate) between 2008 and 2017
#   group by datepart(yy,a.DepartureDate)
#      ,FSS_SpeciesName
#   order by datepart(yy,a.DepartureDate)
#      ,FSS_SpeciesName
# "
channel <- odbcDriverConnect("Driver=SQL Server; Server=VMFSSDEV02; Database=Logbooks_20180430")
land <- sqlQuery(channel,Q)
close(channel)
table(land$species)
land$YearFact <- factor(land$Year)
land <- subset(land,species!="Mackerel Chub\r\n\t")
for(s in sort(unique(land$species))) {
t <- with(subset(land,species==s),tapply(LiveWtTonnes*MeanPricePerKgLiveWt/1000,list(YearFact),sum))
S <- ifelse(s=='Sole Black','Sole',s)
S <- ifelse(s=='Monkfish','Anglerfish',S)
png(paste0(sub('/','-',S),'.png'),3,2,'in',8,'white',600)
par(mar=c(3,4,2.5,0))
barplot(t,las=3,col=pal[7],ylab='Value (millions €)',main=paste(S,'- value of Irish landings'))
dev.off()
cat(s,t['2017'],'\n')
}
library(RODBC)
library(RColorBrewer)
library(ggplot2)
setwd('M:\\StockBooks\\_StockBook2018\\Plots\\ValueTimeSeries')
getwd()
pal <- brewer.pal(9, 'Blues')
Q <- "
select datepart(yy,a.DepartureDate) as Year
,e.IcesDivision
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end as species
,sum(a.EstKgWeightSUM) / 1000 as LiveWtTonnes
,sum(a.EstKgWeightSUM * b.PricePerKgLiveWt) /sum(a.EstKgWeightSUM) as MeanPricePerKgLiveWt
from declarations a
join stecf.FishPrice_Division b
on a.LogID = b.LogID
and a.LogDeclarationID = b.LogDeclarationID
and a.SpeciesID = b.SpeciesID
join SpeciesLookup c
on a.SpeciesID = c.SpeciesID
join vessels d
on a.VesselID = d.VesselID
join IcesLookup e
on a.Division = e.IcesDivision
where d.VesselProvenance = 'ireland'
and datepart(yy,departuredate) between 2008 and 2017
group by datepart(yy,a.DepartureDate)
,e.IcesDivision
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
order by datepart(yy,a.DepartureDate)
,e.IcesDivision
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
"
channel <- odbcDriverConnect("Driver=SQL Server; Server=VMFSSDEV02; Database=Logbooks_20180430")
land <- sqlQuery(channel,Q)
close(channel)
table(land$species)
land$YearFact <- factor(land$Year)
land <- subset(land,species!="Mackerel Chub\r\n\t")
land
unlink('IrishValue17.txt')
sink('IrishValue17.txt')
for(s in sort(unique(land$species))) {
t <- with(subset(land,species==s),tapply(LiveWtTonnes*MeanPricePerKgLiveWt/1000,list(YearFact),sum))
land
land$species
table(land$species)
land$YearFact <- factor(land$Year)
land <- subset(land,species!="Mackerel Chub\r\n\t")
land
land
library(RODBC)
library(RColorBrewer)
library(ggplot2)
setwd('M:\\StockBooks\\_StockBook2018\\Plots\\ValueTimeSeries')
pal <- brewer.pal(9, 'Blues')
Q <- "
select datepart(yy,a.DepartureDate) as Year
,e.IcesDivision
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end as species
,sum(a.EstKgWeightSUM) / 1000 as LiveWtTonnes
,sum(a.EstKgWeightSUM * b.PricePerKgLiveWt) /sum(a.EstKgWeightSUM) as MeanPricePerKgLiveWt
from declarations a
join stecf.FishPrice_Division b
on a.LogID = b.LogID
and a.LogDeclarationID = b.LogDeclarationID
and a.SpeciesID = b.SpeciesID
join SpeciesLookup c
on a.SpeciesID = c.SpeciesID
join vessels d
on a.VesselID = d.VesselID
join IcesLookup e
on a.Division = e.IcesDivision
where d.VesselProvenance = 'ireland'
and datepart(yy,departuredate) between 2008 and 2017
group by datepart(yy,a.DepartureDate)
,e.IcesDivision
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
order by datepart(yy,a.DepartureDate)
,e.IcesDivision
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
"
channel <- odbcDriverConnect("Driver=SQL Server; Server=VMFSSDEV02; Database=Logbooks_20180430")
land <- sqlQuery(channel,Q)
close(channel)
table(land$species)
land$YearFact <- factor(land$Year)
land <- subset(land,species!="Mackerel Chub\r\n\t")
unlink('IrishValue17.txt')
sink('IrishValue17.txt')
for(s in sort(unique(land$species))) {
t <- with(subset(land,species==s),tapply(LiveWtTonnes*MeanPricePerKgLiveWt/1000,list(YearFact),sum))
S <- ifelse(s=='Sole Black','Sole',s)
S <- ifelse(s=='Monkfish','Anglerfish',S)
png(paste0(sub('/','-',S),'.png'),3,2,'in',8,'white',600)
par(mar=c(3,4,2.5,0))
barplot(t,las=3,col=pal[7],ylab='Value (millions )',main=paste(S,'- value of Irish landings'))
dev.off()
cat(s,t['2017'],'\n')
}
sink(NULL)
for(s in sort(unique(land$species))) {
a <- with(subset(land,species==s),aggregate(list(Wt=LiveWtTonnes),list(Div=IcesDivision),sum))
i <- which(a$Wt/sum(a$Wt)>0.05)
div <- a$Div[i]
a <- with(subset(land,species==s & IcesDivision%in%div),aggregate(list(value=LiveWtTonnes*MeanPricePerKgLiveWt,Wt=LiveWtTonnes),list(Div=IcesDivision,Year=Year),sum))
a$price <- a$value/a$Wt
S <- ifelse(s=='Sole Black','Sole',s)
S <- ifelse(s=='Monkfish','Anglerfish',S)
png(paste0('Price_',sub('/','-',S),'.png'),6,4,'in',8,'white',600)
p <- ggplot(a) + geom_line(aes(Year,price,col=Div)) + ylim(0,max(a$price))
plot(p)
dev.off()
}
table(land$species)
land$YearFact <- factor(land$Year)
library(RODBC)
library(RColorBrewer)
library(ggplot2)
setwd('M:\\StockBooks\\_StockBook2018\\Plots\\ValueTimeSeries')
pal <- brewer.pal(9, 'Blues')
Q <- "
select datepart(yy,a.DepartureDate) as Year
,e.IcesDivision
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end as species
,sum(a.EstKgWeightSUM) / 1000 as LiveWtTonnes
,sum(a.EstKgWeightSUM * b.PricePerKgLiveWt) /sum(a.EstKgWeightSUM) as MeanPricePerKgLiveWt
from declarations a
join stecf.FishPrice_Division b
on a.LogID = b.LogID
and a.LogDeclarationID = b.LogDeclarationID
and a.SpeciesID = b.SpeciesID
join SpeciesLookup c
on a.SpeciesID = c.SpeciesID
join vessels d
on a.VesselID = d.VesselID
join IcesLookup e
on a.Division = e.IcesDivision
where d.VesselProvenance = 'ireland'
and datepart(yy,departuredate) between 2008 and 2017
group by datepart(yy,a.DepartureDate)
,e.IcesDivision
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
order by datepart(yy,a.DepartureDate)
,e.IcesDivision
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
"
channel <- odbcDriverConnect("Driver=SQL Server; Server=VMFSSDEV02; Database=Logbooks_20180430")
land <- sqlQuery(channel,Q)
close(channel)
table(land$species)
land$YearFact <- factor(land$Year)
land <- subset(land,species!="Mackerel Chub\r\n\t")
unlink('IrishValue17.txt')
sink('IrishValue17.txt')
for(s in sort(unique(land$species))) {
t <- with(subset(land,species==s),tapply(LiveWtTonnes*MeanPricePerKgLiveWt/1000,list(YearFact),sum))
S <- ifelse(s=='Sole Black','Sole',s)
S <- ifelse(s=='Monkfish','Anglerfish',S)
png(paste0(sub('/','-',S),'.png'),3,2,'in',8,'white',600)
par(mar=c(3,4,2.5,0))
barplot(t,las=3,col=pal[7],ylab='Value (millions )',main=paste(S,'- value of Irish landings'))
dev.off()
cat(s,t['2017'],'\n')
}
sink(NULL)
for(s in sort(unique(land$species))) {
a <- with(subset(land,species==s),aggregate(list(Wt=LiveWtTonnes),list(Div=IcesDivision),sum))
i <- which(a$Wt/sum(a$Wt)>0.05)
div <- a$Div[i]
a <- with(subset(land,species==s & IcesDivision%in%div),aggregate(list(value=LiveWtTonnes*MeanPricePerKgLiveWt,Wt=LiveWtTonnes),list(Div=IcesDivision,Year=Year),sum))
a$price <- a$value/a$Wt
S <- ifelse(s=='Sole Black','Sole',s)
S <- ifelse(s=='Monkfish','Anglerfish',S)
png(paste0('Price_',sub('/','-',S),'.png'),6,4,'in',8,'white',600)
p <- ggplot(a) + geom_line(aes(Year,price,col=Div)) + ylim(0,max(a$price))
plot(p)
dev.off()
}
# ```{r}
# clear all memory
rm(list = ls())
# ```
library(RODBC)
library(RColorBrewer)
library(ggplot2)
setwd('M:\\StockBooks\\_StockBook2018\\Plots\\ValueTimeSeries')
pal <- brewer.pal(9, 'Blues')
getwd()
Q <- "
select datepart(yy,a.DepartureDate) as Year
,e.IcesDivision
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end as species
,sum(a.EstKgWeightSUM) / 1000 as LiveWtTonnes
,sum(a.EstKgWeightSUM * b.PricePerKgLiveWt) /sum(a.EstKgWeightSUM) as MeanPricePerKgLiveWt
from declarations a
join stecf.FishPrice_Division b
on a.LogID = b.LogID
and a.LogDeclarationID = b.LogDeclarationID
and a.SpeciesID = b.SpeciesID
join SpeciesLookup c
on a.SpeciesID = c.SpeciesID
join vessels d
on a.VesselID = d.VesselID
join IcesLookup e
on a.Division = e.IcesDivision
where d.VesselProvenance = 'ireland'
and datepart(yy,departuredate) between 2008 and 2017
group by datepart(yy,a.DepartureDate)
,e.IcesDivision
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
order by datepart(yy,a.DepartureDate)
,e.IcesDivision
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end
"
channel <- odbcDriverConnect("Driver=SQL Server; Server=VMFSSDEV02; Database=Logbooks_20180430")
land <- sqlQuery(channel,Q)
close(channel)
table(land$species)
land$YearFact <- factor(land$Year)
land <- subset(land,species!="Mackerel Chub\r\n\t")
unlink('IrishValue17.txt')
sink('IrishValue17.txt')
# ```{r}
# clear all memory
rm(list = ls())
# ```
library(RODBC)
library(RColorBrewer)
library(ggplot2)
l
library(RODBC)
library(RColorBrewer)
library(ggplot2)
