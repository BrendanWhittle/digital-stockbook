sam <- subset(sam, (samp == 'Arbutus 2004-07-07' & type=='Discards')==FALSE)
sam <- subset(sam, (samp == 'Arbutus 2004-06-22' & type=='Discards')==FALSE)
#2003
sam <- subset(sam, (samp == '2003-06-23 Fidelia' & type=='Discards')==FALSE)
sam <- subset(sam, (samp == '2003-05-13 Fidelia' & type=='Discards')==FALSE)
sam <- subset(sam, (samp == '2003-05-19' & type=='Discards')==FALSE)
sam <- subset(sam, (samp == 'Stelimar 2003-05-08' & type=='Discards')==FALSE)
sam <- subset(sam, (samp == 'Stelimar 2003-06-24' & type=='Discards')==FALSE)
sam1  <- sam %>%  filter( type == 'Discards')
sam1  <- sam1 %>%  spread(sex,n)
sam1[is.na(sam1)] <- 0
sam1 <- sam1 %>% mutate(whole=(Male+Female))
sam2 <- sam1 %>% mutate(PropRet=(Heads/(Heads+whole)))
#Further sample clean up where heads comprised > 0.9 of discard sample
dis.h <- sam2 %>% group_by(year, type, q, date, samp) %>%
summarise(h = sum(Heads),
t = sum(Heads+Female+Male)) %>%
mutate(rat = (h/t)) %>%
arrange(year)
rem <- dis.h %>% filter(rat >='0.9') # 27 samples for 2006 yeras
#write.csv(rem, 'heads90.csv')
sam2 <- subset(sam2, (samp == 'Suzanna G 2007-03-08' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Suzanna G 2007-03-13' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Suzanna G 2007-03-23' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Mystical Rose II 2009-02-20' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Mystical Rose II 2009-05-16' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Newgrange 2010-05-25' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Mystical Rose II 2010-06-07' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Mystical Rose II 2010-07-29' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Mystical Rose II 2010-06-10' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Mystical Rose II 2010-05-20' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Mystical Rose II 2010-05-21' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Mystical Rose II 2010-06-01' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Mystical Rose II 2010-05-17' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Mystical Rose II 2010-06-04' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Mystical Rose II 2010-05-14' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Mystical Rose II 2010-05-24' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Mystical Rose II 2012-11-26' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Foyle fisher 2011-06-01' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Excel 2013-08-01' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Excel 2014-06-16' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Keriolet 2014-07-08' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Excel 2014-12-01' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Excel 2014-05-23' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Excel 2015-06-25' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Excel 2015-03-19' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Excel 2015-09-08' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'COURAGE 2016-04-25' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'COURAGE 2016-07-19' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Excel 2016-11-29' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Excel 2016-05-23' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'Excel 2017-05-08' & type=='Discards')==FALSE)
sam2 <- subset(sam2, (samp == 'COURAGE 2017-05-12' & type=='Discards')==FALSE)
plot <- sam2  %>% count(year,q,type, samp) %>% group_by(year,q,type) %>% summarise(n=length(type))
plot1 <- ggplot(plot, aes (x= q, y = n, fill = year)) +
geom_bar(stat = "identity", fill = 'light blue') +
facet_grid(type ~ year) +
theme_bw() +
guides(fill=FALSE)
plot2 <- plot1  + theme(axis.text=element_text(size=10),axis.title=element_text(size=10))
plot2 + geom_text(data = plot, aes(x = q, y = (n + .02), label = (n)), size = 3)
dim(sam2)
p3 <- ggplot(sam2, aes(cl,PropRet, group = as.factor(q), colour= samp)) + geom_point()+
facet_grid(year~ q) + coord_cartesian(ylim = c(0, 1)) + geom_smooth() +
ylab("Proportion Retained") + xlab("Carapace Length in mm")+ theme_bw() +
theme(legend.position="none")
p3 + theme(axis.text=element_text(size=10),axis.title=element_text(size=10))
### now looking up the L50s & SE bounds from the lowess smoothers
test<- sam2 %>% filter(year >= '2006')
q <- ggplot(test, aes(PropRet, cl, group = as.factor(q), colour= samp)) + geom_point()+
facet_grid(year~ q) + geom_smooth() +
ylab("Proportion Retained") + xlab("Carapace Length in mm")+ theme_bw() +
theme(legend.position="none")
dat <- ggplot_build(q)$data[[2]]
out <- NULL
for(i in unique(dat$PANEL)) {
x <- subset(dat, PANEL==i)
L50 <- x[which(abs(x$x-0.5)==min(abs(x$x-0.5))),]
L50$PANEL <- as.numeric(L50$PANEL)
L50 <- summarise_all(L50[2:8], funs(mean))
out <- rbind(out,data.frame(i,L50))
}
PANEL.date <- data.frame(PANEL = seq(1:48),
date= seq(as.Date("2006-01-25"), as.Date("2017-12-01"), by = "quarter"))
out <- left_join(out, PANEL.date, by="PANEL")
out$Quarter <- as.factor(quarter(out$date))
out$Year <- as.factor(year(out$date))
out_6 <-out
#rename 2003 data
#out_3 <-  out
#out_5 <- out
test<- sam2 %>% filter(year == '2003')
q <- ggplot(test, aes(PropRet, cl, group = as.factor(q), colour= samp)) + geom_point()+
facet_grid(year~ q) + geom_smooth() +
ylab("Proportion Retained") + xlab("Carapace Length in mm")+ theme_bw() +
theme(legend.position="none")
dat <- ggplot_build(q)$data[[2]]
out <- NULL
for(i in unique(dat$PANEL)) {
x <- subset(dat, PANEL==i)
L50 <- x[which(abs(x$x-0.5)==min(abs(x$x-0.5))),]
L50$PANEL <- as.numeric(L50$PANEL)
L50 <- summarise_all(L50[2:8], funs(mean))
out <- rbind(out,data.frame(i,L50))
}
PANEL.date <- data.frame(PANEL = seq(1:48),
date= seq(as.Date("2003-02-07"), as.Date("2003-11-28"), by = "quarter"))
out <- left_join(out, PANEL.date, by="PANEL")
out$Quarter <- as.factor(quarter(out$date))
out$Year <- as.factor(year(out$date))
out_3 <- out
test<- sam2 %>% filter(year == '2005')
q <- ggplot(test, aes(PropRet, cl, group = as.factor(q), colour= samp)) + geom_point()+
facet_grid(year~ q) + geom_smooth() +
ylab("Proportion Retained") + xlab("Carapace Length in mm")+ theme_bw() +
theme(legend.position="none")
dat <- ggplot_build(q)$data[[2]]
out <- NULL
for(i in unique(dat$PANEL)) {
x <- subset(dat, PANEL==i)
L50 <- x[which(abs(x$x-0.5)==min(abs(x$x-0.5))),]
L50$PANEL <- as.numeric(L50$PANEL)
L50 <- summarise_all(L50[2:8], funs(mean))
out <- rbind(out,data.frame(i,L50))
}
PANEL.date <- data.frame(PANEL = seq(1:48),
date= seq(as.Date("2005-03-14"), as.Date("2005-06-30"), by = "quarter"))
out <- left_join(out, PANEL.date, by="PANEL")
out$Quarter <- as.factor(quarter(out$date))
out$Year <- as.factor(year(out$date))
out_5<- out
all.out <-rbind(out_3, out_5, out_6)
all.out <- all.out %>% arrange(date)
p4 <- ggplot(all.out, aes(date, y, group=year(date))) + geom_line() +
geom_point(size=3, shape=21, fill="white", colour=all.out$Quarter) +
geom_errorbar(aes(ymin=ymin, ymax=ymax, width=50)) +
ylab("Lowess L50 +/- SE bounds") + xlab("Year and Quarter") +
theme_bw() +  geom_hline(yintercept=25,linetype="dashed",
color = "red", size=0.5) +
coord_cartesian(ylim= c(0, 60))
p4 + theme(axis.text=element_text(size=10),axis.title=element_text(size=10))
#set up discard ogives for yrs 2003-2005
samr3 <- sam2 %>% filter (year =='2003')
sam.dat <- rbind(samr3, sam2)
samr3$year <- as.numeric(2004)
sam.dat1 <- rbind(samr3, sam.dat)
samr5 <- sam2 %>% filter (year =='2003')
samr5$year <- as.numeric(2005)
sam.dat2 <- rbind(samr5,sam.dat1)
sam.all <-  sam.dat2
sam4 <- sam.all%>% group_by(year, cl) %>% summarise(heads=sum(Heads), whole=sum(whole))
max <- sam4 %>% group_by(year) %>% summarise(max=max(heads), maxcl = cl[which.max(heads)])
sam4 <- left_join(sam4, max, by="year")
sam4$head <- with(sam4, ifelse(cl< maxcl, heads, max))
sam4 <- sam4 %>% mutate(PropRet=(head/(head+whole)))
sam4$year <- as.factor(sam4$year)
sam4$PropRet <- with(sam4,ifelse(cl<20, 0, PropRet))
#write.csv(sam4, "wd2018.sam4.csv")
######
df <- NULL
for(i in unique(sam4$year)) {
s <- subset(sam4, year==i)
mdl <- with(s, loess(PropRet ~ cl))
L50 <- predict(mdl, seq(1, 75, 1))
df <- rbind(df, data.frame(year=i, cl= seq(1, 75, 1), L50= L50))
}
# some assumed fillins
df$ogive <- with(df, ifelse(cl<18, 0, L50))
df$ogive <- with(df, ifelse(cl>35, 1, ogive))
df$ogive <- with(df, ifelse(ogive<0, 0, ogive))
df$ogive <- with(df, ifelse(ogive>1, 1, ogive))
p5 <- ggplot(df, aes(cl, ogive, group=year)) + geom_line(aes(colour=year)) +
geom_point(data=sam4, aes(x=cl, y=PropRet, colour=year)) +
ylab("Proportion Retained") + xlab("Carapace Length in mm")+ theme_bw() +
geom_vline(xintercept = 25)
p5  + theme(axis.text=element_text(size=10),axis.title=element_text(size=10))
#this is data used to separate catch lfd
#this is data used to separate catch lfd
#write.csv(df, "wd2018.annual.dogs.csv")
#save(df, file="wd2018.annual.dogs.wd.Rdata")
#Plot the annual L50 and error bars
q <- ggplot(sam4, aes(PropRet, cl, group = year, colour= year)) + geom_point()+
facet_grid(~year) + geom_smooth() +
ylab("Proportion Retained") + xlab("Carapace Length in mm")+ theme_bw() +
theme(legend.position="none")
datyr <- ggplot_build(q)$data[[2]]
out.yr <- NULL
for(i in unique(datyr$group)) {
x <- subset(datyr, group==i)
L50 <- x[which(abs(x$x-0.5)==min(abs(x$x-0.5))),]
L50$group <- as.numeric(L50$group)
L50 <- summarise_all(L50[2:8], funs(mean))
out.yr <- rbind(out.yr,data.frame(i,L50))
}
group.yr <- data.frame(group = seq(1:15), yr=seq(2003, 2017), by =1)
out.yr <- left_join(out.yr, group.yr, by="group")
p6 <- ggplot(out.yr, aes(yr, y, group=yr)) + geom_line() +
geom_point(size=4, shape=21, fill="white", colour=out.yr$yr) +
geom_errorbar(aes(ymin=ymin, ymax=ymax, width=0.5)) +
ylab("Lowess L50 +/- SE bounds") + xlab("Year") +
theme_bw() + geom_hline(yintercept=25,linetype="dashed",
color = "red", size=0.5)  +
coord_cartesian(ylim= c(0, 60))
p6  + theme(axis.text=element_text(size=10),axis.title=element_text(size=10))
nat <- read.csv("//Galwayfs03/Fishdata/Data for ICESWG/2018/WGCSE/nep-22/working_document/WD_FU22_Landings.csv")
nat$LiveWt <-as.numeric(as.character(nat$LiveWt))
nat$LiveWtRaisedToDecs <-as.numeric(as.character(nat$LiveWtRaisedToDecs))
nat <- nat[c(2:9)]
nat$LiveWt <- nat$LiveWt/1000
nat$Quarter <- as.factor(nat$Quarter)
p7 <- ggplot(nat, aes(Year, LiveWt))+ geom_col(aes(fill = Quarter)) +
theme_bw() +
coord_cartesian(ylim= c(0, 3500), xlim=c(2003,2017)) + ylab("Landings in Tonnes")
p7 + theme(axis.text=element_text(size=10),axis.title=element_text(size=10))
nl <- nat %>% group_by(Year, Quarter) %>% summarise(tot =sum(LiveWt))
nl <- nl %>% spread( Quarter, -Year)
names(nl) <- c("year","q1", "q2", "q3", "q4")
nl <- as.data.frame(nl)
nl <- nl %>% select(q1:q4) %>%
transmute(Total = rowSums(.)) %>% bind_cols(nl, .)
knitr::kable(nl , digits=3)
int.land <- read.csv("//galwayfs03/Fishdata/Data for ICESWG/2018/WGCSE/nep-22/data/fu22_int.land.csv")
int.land <- gather(int.land,"country", "landings",2:5)
p8 <-
ggplot(int.land, aes(Year, landings, fill=country)) + geom_bar(stat="identity", position= "stack") +
theme_bw() + ylab("Landings in Tonnes")+
scale_fill_manual(breaks = c("France", "Belgium", "Ireland", "UK"),
values=c("#E69F00", "#56B4E9", "#009E73", "#CC6666")) +
coord_cartesian(ylim= c(0, 3500), xlim=c(2003,2017))
p8 + theme(axis.text=element_text(size=12),axis.title=element_text(size=12))
int.land <- int.land %>% mutate_all(funs(replace(., is.na(.), 0)))
int <- int.land %>% group_by(Year) %>% summarise(total=sum(landings))
names(int) <- c("year","total")
int$year  <- as.numeric(int$year)
knitr::kable(int , digits=3)
qlfd <- lf %>%  filter(type == 'Catch', year >='2003', year!='2018') %>%
group_by(year, q, cl, sex) %>% summarise(n= sum(n), wt = sum(wt))
ggplot(qlfd, aes(x=cl, y=n)) + geom_bar(stat='identity') + facet_grid(year~q) + theme_bw()
# #make join field and partition catch using annual discard ogive
qlfd$ycl  <- paste(qlfd$year, '/', qlfd$cl)
df$ycl  <- paste(df$year,'/', df$cl)
qlfd <- left_join(qlfd, df, by="ycl")
qlfd <- qlfd[c(1:6, 11)]
qlfd$lan.n <- qlfd$n*qlfd$ogive
qlfd$lan.wt <- qlfd$wt*qlfd$ogive
qlfd$dis.n <- qlfd$n - qlfd$lan.n
qlfd$dis.wt <- qlfd$wt - qlfd$lan.wt
# calculate  sample weight
samwt <- qlfd %>% group_by(year.x, q) %>%
summarise(dis.wt= sum(dis.wt),
lan.wt = sum(lan.wt)) %>%
mutate(yq = paste(year.x,q))
#call in national landings and calculate raising factor
land <- nat[c(1:2, 8)]
land <- land %>% group_by(Year, Quarter) %>% summarise(LiveWt) %>%
mutate(yq=paste(Year, Quarter))
samwt <- left_join(samwt, land, by="yq")
samwt <- samwt[c(1:5, 8)]
names(samwt) <- c("year", "q", "dis.wt", "lan.wt", "yq", "live.wt")
samwt$rf <- with(samwt, live.wt/lan.wt)
qlfd <-rename(qlfd, year=year.x, cl=cl.x)
qlfd$yq <- with(qlfd, paste(year, q))
qlfd <- left_join(qlfd, samwt, by="yq")
qlfd$rdis.n <- with(qlfd, dis.n*rf)
qlfd$rlan.n <- with(qlfd, lan.n*rf)
qlfd$rdis.wt <- with(qlfd, dis.wt.x*rf)
qlfd$rlan.wt <- with(qlfd, lan.wt.x*rf)
qlfd$mw <- qlfd$wt/qlfd$n
#check
#qlfd %>% group_by(year.x) %>% summarise(lan.num =sum(rlan.n),
#lan.wgt =sum(rlan.wt),
#dis.num =sum(rdis.n),
#dis.wgt =sum(rdis.wt))
#raise to missing sample quarters as international data is not by quarter
check <- qlfd %>% group_by(year.x) %>% summarise(rlan.wt=sum(rlan.wt), rdis.wt=sum(rdis.wt))
check <- check %>% rename_at("year.x",~"year")
land1 <- land %>% rename_at("Year",~"year") %>% group_by(year) %>% summarise(tot =sum(LiveWt))
test <- left_join(check, land1, by="year")
test$rf1 <- with(test, tot/rlan.wt)
qlfd <-rename(qlfd, year=year.x, q=q.x)
qlfd <- left_join(qlfd, test, by="year")
qlfd$rdis.n.r <- with(qlfd, rdis.n*rf1)
qlfd$rlan.n.r <- with(qlfd, rlan.n*rf1)
qlfd$rdis.wt.r <- with(qlfd, rdis.wt.x*rf1)
qlfd$rlan.wt.r <- with(qlfd, rlan.wt.x*rf1)
#write.csv(qlfd, "fu22.nat.qlfd.2018.wd.csv")
#check weights for 2015
#Now the International Raising Factor
int.dat <- qlfd %>% group_by(year) %>% summarise(lan.wgt =sum(rlan.wt.r), dis.wgt =sum(rdis.wt.r))
int.dat <- left_join(int, int.dat, by="year")
int.dat$rf2 <- with(int.dat, total/lan.wgt)
int.dat <- int.dat %>% mutate_all(funs(replace(., is.na(.), 0)))
qlfd <- left_join(qlfd, int.dat, by="year")
qlfd$rdis.num <- with(qlfd, rdis.n.r*rf2)
qlfd$rlan.num <- with(qlfd, rlan.n.r*rf2)
qlfd$rdis.wt <- with(qlfd, rdis.wt.r*rf2)
qlfd$rlan.wt <- with(qlfd, rlan.wt.r*rf2)
#check <- qlfd %>% group_by(year) %>% summarise(int.lan.num =sum(rlan.num),
#int.lan.wgt =sum(rlan.wt),
#int.dis.num =sum(rdis.num),
#int.dis.wgt =sum(rdis.wt))
#write.csv(qlfd, "fu22.int.qlfd.2018.wd.csv")
# save data
#save(qlfd, file="fu22.int.qlfd.2018.wd.Rdata")
fu22.exp$abund <- as.numeric(fu22.exp$abund)
rldf <- qlfd[c(1:4, 36:37)]
rldf <- rldf %>% gather("type", "n",5:6)
rldf$type <- ifelse(rldf$type=="rdis.num", "Discards", "Landings")
rldf$col <- ifelse(rldf$type=="Landings","white","red")
#ggplot(rldf , aes(x= cl, y= n, fill=type)) + geom_bar(stat="identity") + facet_grid(year~q)
pm <- ggplot(rldf , aes(x= cl, y= n, fill=type)) + geom_bar(stat="identity")
rldf$cl.n <- rldf$cl*rldf$n
#get mean for lfd
vline.data <- rldf %>% group_by(year, sex, type)  %>% summarise(mean=sum(cl.n)/sum(n))
#write.csv(vline.data, "fu22_meanld_wd2018.csv")
vline.l  <- subset(vline.data, type=="Landings")
vline.d  <- subset(vline.data, type=="Discards")
pm + facet_grid(year~sex) +
theme(strip.text.y = element_text(size = 10)) +
scale_fill_manual(values=c("blue","grey")) +
geom_vline(aes(xintercept= vline.l$mean), vline.l, colour="black", linetype="solid") +
geom_vline(aes(xintercept= vline.d$mean), vline.l, colour="red", linetype="solid") +
theme_bw()
#ggsave("fu22.int.lfd.wgcse2018.png")
rldf
View(rldf)
rldf <- qlfd[c(1:4, 36:37)]
rldf <- rldf %>% gather("type", "n",5:6)
rldf$type <- ifelse(rldf$type=="rdis.num", "Discards", "Landings")
write.csv(rldf, "fu22.int.lfd.wgcse2018.csv")
getwd()
write.csv(rldf, "fu22.int.lfd.wgcse2018.csv", row.names = FALSE)
library(RODBC)
library(RColorBrewer)
setwd('y:\\StockBooks\\_Stockbook2018\\Plots\\LandingsByDivision')
pal <- brewer.pal(9, 'Blues')
Q <- "
select year
,species
,Division
,sum(landWt) as landWt
from(
select datepart(year,d.LandingDate) as year
,i.IcesDivisionCorrect as Division
,d.EstKgWeightSUM as landWt
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end as species
from Declarations as d
join SpeciesLookup as s
on d.SpeciesID = s.SpeciesID
join Vessels as v
on d.VesselID = v.VesselID
left join IcesLookup i
on d.Division = i.IcesDivision
where v.VesselProvenance='Ireland'
union all select datepart(year,d.EndDate) as year
,i.IcesDivisionCorrect as Division
,d.EstLiveWeightSUM as landWt
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end as species
from Under10MeterLandings as d
join SpeciesLookup as s
on d.SpeciesID = s.SpeciesID
left join IcesLookup i
on d.Division = i.IcesDivision
)x
where species is not null
and year between 2015 and 2017
group by year, species ,Division
order by year, species ,Division
"
channel <- odbcDriverConnect("Driver=SQL Server; Server=VMFSSDEV02; Database=Logbooks_20180305")
land <- sqlQuery(channel,Q)
close(channel)
table(land$species)
table(land$Division)
div_order <- c("IIa", "IIb", "IVa", "IVb", "IVc","Vb1", "VIa", "VIb",
"VIIa", "VIIb", "VIIc", "VIId", "VIIe", "VIIf", "VIIg", "VIIh",
"VIIj", "VIIk","VIIIa", "VIIIb", "VIIIc", "VIIId", "VIIIe", "IXb", "Xb", "XIIa",
"XIIb", "XIIc",'Other')
div_order1 <- c("2a", "2b", "4a", "4b", "4c","5b1", "6a", "6b",
"7a", "7b", "7c", "7d", "7e", "7f", "7g", "7h",
"7j", "7k","8a", "8b", "8c", "8d", "8e", "9b", "10b", "12a",
"12b", "12c",'other')
data.frame(div_order,div_order1)
#check that i have all divisions
unique(land$Division)[!unique(land$Division)%in%div_order]
unlink('IrishLandings2015-17.txt')
sink('IrishLandings2015-17.txt')
for(s in levels(land$species)) {
land0 <- subset(land,species==s)
t0 <- with(land0, tapply(landWt,list(as.character(Division)),sum))
t0 <- ifelse(is.na(t0),0,t0)
t1 <- cumsum(sort(t0,F))
d <- rev(names(t1)[t1 > 0.01 * sum(t0)])[1:6]
if(length(t1>5)) land0$division <- ifelse(land0$Division%in%d,as.character(land0$Division),'Other')
land0$division <- ordered(land0$division,div_order)
land0 <- merge(land0,data.frame(division=div_order,division1=div_order1))
land0$division1 <- ordered(land0$division1,div_order1)
t <- with(droplevels(land0), tapply(landWt,list(year,division1),sum))
t <- ifelse(is.na(t),0,t)
S <- ifelse(s=='Sole Black','Sole',s)
S <- ifelse(s=='Monkfish','Anglerfish',S)
S <- ifelse(s=='Tuna Northern Bluefin','Bluefin tuna',S)
png(paste0(sub('/','-',S),'.png'),3,2,'in',8,'white',600)
#    par(mar=c(3.5,5,3,1))
#    barplot(t/1000,beside=T,las=3,col=pal[c(3,5,7)],ylab='Tonnes',legend=T,main=paste(S,'landings by Irish vessels'))
par(mar=c(2.5,4,3,0))
barplot(t/1000,beside=T,col=pal[c(3,5,7)],ylab='Tonnes',legend=T,main=paste(S,'landings by Irish vessels'))
dev.off()
cat(s,round(rowSums(t)/1000),'\n')
}
sink(NULL)
# nephrops
nep <- read.csv('\\\\galwayfs03\\fishdata\\StockBooks\\_Stockbook2018\\Plots\\nep_fus_landings.csv')
nep$FU1 <- ifelse(nep$FU%in%c('15','16','17','19','22','2021'),as.character(nep$FU),'other')
t <- tapply(nep$X2014,nep$FU1,sum)
t <- rbind(t,tapply(nep$X2015,nep$FU1,sum))
t <- rbind(t,tapply(nep$X2016,nep$FU1,sum))
rownames(t) <- 2015:2017
png('NephropsFU.png',3,2,'in',8,'white',600)
par(mar=c(2.5,4.1,3,0.1))
barplot(t/1000,beside=T,col=pal[c(3,5,7)],ylab='Tonnes',legend=T,main=paste('Nephrops','landings by Irish vessels'),args.legend=list(x='top'))
dev.off()
library(RODBC)
library(RColorBrewer)
setwd('y:\\StockBooks\\_Stockbook2018\\Plots\\LandingsByDivision')
pal <- brewer.pal(9, 'Blues')
Q <- "
select year
,species
,Division
,sum(landWt) as landWt
from(
select datepart(year,d.LandingDate) as year
,i.IcesDivisionCorrect as Division
,d.EstKgWeightSUM as landWt
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end as species
from Declarations as d
join SpeciesLookup as s
on d.SpeciesID = s.SpeciesID
join Vessels as v
on d.VesselID = v.VesselID
left join IcesLookup i
on d.Division = i.IcesDivision
where v.VesselProvenance='Ireland'
union all select datepart(year,d.EndDate) as year
,i.IcesDivisionCorrect as Division
,d.EstLiveWeightSUM as landWt
,case when FAQDesc in ('Tuna Albacore','Tuna Northern Bluefin') then FAQDesc else FSS_SpeciesName end as species
from Under10MeterLandings as d
join SpeciesLookup as s
on d.SpeciesID = s.SpeciesID
left join IcesLookup i
on d.Division = i.IcesDivision
)x
where species is not null
and year between 2015 and 2017
group by year, species ,Division
order by year, species ,Division
"
channel <- odbcDriverConnect("Driver=SQL Server; Server=VMFSSDEV02; Database=Logbooks_20180305")
land <- sqlQuery(channel,Q)
close(channel)
table(land$species)
table(land$Division)
div_order <- c("IIa", "IIb", "IVa", "IVb", "IVc","Vb1", "VIa", "VIb",
"VIIa", "VIIb", "VIIc", "VIId", "VIIe", "VIIf", "VIIg", "VIIh",
"VIIj", "VIIk","VIIIa", "VIIIb", "VIIIc", "VIIId", "VIIIe", "IXb", "Xb", "XIIa",
"XIIb", "XIIc",'Other')
div_order1 <- c("2a", "2b", "4a", "4b", "4c","5b1", "6a", "6b",
"7a", "7b", "7c", "7d", "7e", "7f", "7g", "7h",
"7j", "7k","8a", "8b", "8c", "8d", "8e", "9b", "10b", "12a",
"12b", "12c",'other')
data.frame(div_order,div_order1)
#check that i have all divisions
unique(land$Division)[!unique(land$Division)%in%div_order]
unlink('IrishLandings2015-17.txt')
sink('IrishLandings2015-17.txt')
for(s in levels(land$species)) {
land0 <- subset(land,species==s)
t0 <- with(land0, tapply(landWt,list(as.character(Division)),sum))
t0 <- ifelse(is.na(t0),0,t0)
t1 <- cumsum(sort(t0,F))
d <- rev(names(t1)[t1 > 0.01 * sum(t0)])[1:6]
if(length(t1>5)) land0$division <- ifelse(land0$Division%in%d,as.character(land0$Division),'Other')
land0$division <- ordered(land0$division,div_order)
land0 <- merge(land0,data.frame(division=div_order,division1=div_order1))
land0$division1 <- ordered(land0$division1,div_order1)
t <- with(droplevels(land0), tapply(landWt,list(year,division1),sum))
t <- ifelse(is.na(t),0,t)
S <- ifelse(s=='Sole Black','Sole',s)
S <- ifelse(s=='Monkfish','Anglerfish',S)
S <- ifelse(s=='Tuna Northern Bluefin','Bluefin tuna',S)
png(paste0(sub('/','-',S),'.png'),3,2,'in',8,'white',600)
#    par(mar=c(3.5,5,3,1))
#    barplot(t/1000,beside=T,las=3,col=pal[c(3,5,7)],ylab='Tonnes',legend=T,main=paste(S,'landings by Irish vessels'))
par(mar=c(2.5,4,3,0))
barplot(t/1000,beside=T,col=pal[c(3,5,7)],ylab='Tonnes',legend=T,main=paste(S,'landings by Irish vessels'))
dev.off()
cat(s,round(rowSums(t)/1000),'\n')
}
sink(NULL)
# nephrops
nep <- read.csv('\\\\galwayfs03\\fishdata\\StockBooks\\_Stockbook2018\\Plots\\nep_fus_landings.csv')
nep$FU1 <- ifelse(nep$FU%in%c('15','16','17','19','22','2021'),as.character(nep$FU),'other')
t <- tapply(nep$X2015,nep$FU1,sum)
t <- rbind(t,tapply(nep$X2016,nep$FU1,sum))
t <- rbind(t,tapply(nep$X2017,nep$FU1,sum))
rownames(t) <- 2015:2017
png('NephropsFU.png',3,2,'in',8,'white',600)
par(mar=c(2.5,4.1,3,0.1))
barplot(t/1000,beside=T,col=pal[c(3,5,7)],ylab='Tonnes',legend=T,main=paste('Nephrops','landings by Irish vessels'),args.legend=list(x='top'))
dev.off()
